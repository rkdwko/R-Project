movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
data1 <- readLines("naver_movie_극한직업.txt")
data1    # 파일에서 읽은 Raw Data(한글 문장)
extractNoun('진짜 개재밌음 꼭 보삼 류승룡씨는 오랜만에 흥행성공 하시겠네.')
install.packages("extractNoun")
library(extractNoun)
extractNoun('진짜 개재밌음 꼭 보삼 류승룡씨는 오랜만에 흥행성공 하시겠네.')
extractNoun('진짜 개재밌음 꼭 보삼 류승룡씨는 오랜만에 흥행성공 하시겠네')
install.packages("extractNoun")
library(extractNoun)
data2 <- sapply(data1, USE.NAMES=F)
data2 <- sapply(data1)
library(KoNLP)
install.packages('KoNLP')
library(KoNLP)
data1 <- readLines("응답소_2015_01.txt")
setwd('D:/Workspace/R-Project')
install.packages('rJava')
install.packages("rJava")
library(rJava)
install.packages('KoNLP')
library(KoNLP)
library(rJava)
install.packages('KoNLP')
library(KoNLP)
setwd('D:/Workspace/R-Project')
library(rvest)
library(stringr)
library(dplyr)
library(abind)
install.packages('rJava')
library(rJava)
setwd('D:/Workspace/R_Lecture/Part2/Stage1_WordCloud/과제')
setwd('D:/Workspace/R-Lecture/Part2/Stage1_WordCloud/과제')
install.packages('rJava')
install.packages("rJava")
library(rJava)
install.packages('KoNLP')
install.packages('wordcloud')
library(KoNLP)
setwd('D:/Workspace/R-Project')
library(rvest)
library(stringr)
library(dplyr)
library(abind)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
library(rvest)
library(stringr)
library(dplyr)
library(abind)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(xlsx)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
library(rJava)
library(rJava)
library(KoNLP)
library(KoNLP)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
remove.packages("rJava")
remove.packages("KoNlp")
remove.packages("KoNLP")
install.packages('rJava')
install.packages("rJava")
library(rJava)
install.packages('KoNLP')
library(KoNLP)
remove.packages("KoNLP")
remove.packages("rJava")
install.packages('rJava')
install.packages("rJava")
library(rJava)
install.packages('KoNLP')
library(KoNLP)
library(KoNLP)
install.packages("callr")
library(callr)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(rvest)
install.packages('rJava')
library(rJava)
install.packages('KoNLP')
library(KoNLP)
install.packages('devtools')
library(devtools)
install.packages('rvest')
library(rvest)
install.packages('stringr')
install.packages('dplyr')
install.packages('abind')
install.packages('wordcloud')
install.packages('RColorBrewer')
install.packages('xlsx')
useSejongDic()
library(rvest)
library(stringr)
library(dplyr)
library(abind)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
library(xlsx)
data1 <- readLines("naver_movie_극한직업.txt")
data1    # 파일에서 읽은 Raw Data(한글 문장)
extractNoun('진짜 개재밌음 꼭 보삼 류승룡씨는 오랜만에 흥행성공 하시겠네')
install.packages('exractNoun')
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
library(rJava)
library(KoNLP)
install.packages(c("abind", "dplyr", "KoNLP", "RColorBrewer", "rJava", "rvest", "stringr", "wordcloud", "xlsx"))
install.packages(c("abind", "dplyr", "KoNLP", "RColorBrewer", "rJava", "rvest", "stringr", "wordcloud", "xlsx"))
library(rJava)
install.packages('rJava')
library(rJava)
install.packages('KoNLP')
library(KoNLP)
install.packages('devtools')
library(devtools)
library(KoNLP)
apt-get -y build-dep libcur14-gnutls-dev
install.packages('libcurl4-gnutls-dev')
install.packages('libcurl4-gnutls-dev')
install.packages('devtools')
library(KoNLP)
remove.packages('KoNLP')
install.packages('KoNLP', dep=TRUE)
library(KoNLP)
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
library(rvest)
library(stringr)
library(dplyr)
install.packages('dplyr')
install.packages('abind')
library(dplyr)
library(abind)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
install.packages('rJava')
install.packages('rvest')
install.packages('stringr')
install.packages('dplyr')
install.packages('abind')
install.packages('KoNLP')
library(rJava)
library(KoNLP)
install.packages('wordcloud')
install.packages('wordcloud')
install.packages('RColorBrewer')
install.packages('xlsx')
library(rvest)
library(stringr)
library(dplyr)
library(abind)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
install.packages(c("ggplot2", "gridExtra", "knitr"))
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(stringr)
library(dplyr)
library(abind)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- '/movie/bi/mi/point.nhn?code=167651'
url <- paste0(base_url,url_sub)
html <- read_html(url)
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
pages <- 1:4652
naver_movie <- data.frame(score=c(),review=c(),writer=c(),time=c())
for (n in 1:length(pages)) {
url_pages <- paste0(url_ifr,pages[n])
html2 <- read_html(url_pages)
lis <- html2 %>% html_node('div.score_result') %>% html_nodes('li')
score <- c()
review <- c()
writer <- c()
time <- c()
for (li in lis) {
# score
score <- c(score,html_node(li,'.star_score') %>% html_text('em') %>% trim())
# review
tmp <- li %>% html_node('.score_reple') %>% html_text('p') %>% trim()
idx <- str_locate(tmp,'\r')
review <- c(review,str_sub(tmp,1,idx[1]-1))
# writer
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
writer <- c(writer,str_sub(tmp,1,idx[1]-1))
# time
tmp <- trim(str_sub(tmp,idx[1],-1))
idx <- str_locate(tmp,'\r')
time <- c(time,str_sub(tmp,1,idx[1]-1))
}
movie <- data.frame(score=score,review=review,writer=writer,time=time)
naver_movie <- rbind.data.frame(naver_movie,movie)
}
naver_movie
library(ggplot2)
library(ggplot2)
library(gridExtra)
naver_movie <- read.csv("D:/Workspace/R-Project/naver_movie_극한직업(일자별 시간별 월별).csv",header=T)
str(naver_movie)
library(ggplot2)
library(gridExtra)
data_movie <- naver_movie %>%
select(score, month, day, time)
data_movie1 <- data_movie %>%
group_by(month) %>%
summarise(average=mean(score,na.rm=T))
data_movie1
ggplot(data_movie1,aes(x=month,y=average,fill=month)) +
geom_bar(stat="identity") +
xlab("월") + ylab("평균 평점") +
ggtitle("극한직업 월별 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=10,face="bold"),
axis.title.y = element_text(color="black",size=10,face="bold"))
data_movie2 <- data_movie %>%
group_by(day) %>%
summarise(average=mean(score,na.rm=T))
data_movie2
data_movie2_1 <- data_movie2 %>%
filter(day %in% c('2019.02.01','2019.02.02','2019.02.03','2019.02.04',
'2019.02.05','2019.02.06','2019.02.07','2019.02.08'))
data_movie2_2 <- data_movie2 %>%
filter(day %in% c('2019.03.01','2019.03.02','2019.03.03','2019.03.04',
'2019.03.05','2019.03.06','2019.03.07','2019.03.08'))
data_movie2_3 <- data_movie2 %>%
filter(day %in% c('2019.04.01','2019.04.02','2019.04.03','2019.04.04',
'2019.04.05','2019.04.06','2019.04.07','2019.04.08'))
data_movie2_4 <- data_movie2 %>%
filter(day %in% c('2019.05.01','2019.05.02','2019.05.03','2019.05.04',
'2019.05.05','2019.05.06','2019.05.07','2019.05.08'))
g1 <- ggplot(data_movie2_1,aes(x=day,y=average,fill=day)) +
geom_bar(stat="identity") +
xlab("일자") + ylab("평균 평점") +
ggtitle("극한직업 일자별 평균평점 1") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=9,face="bold"),
axis.title.y = element_text(color="black",size=9,face="bold"))
g2 <- ggplot(data_movie2_2,aes(x=day,y=average,fill=day)) +
geom_bar(stat="identity") +
xlab("일자") + ylab("평균 평점") +
ggtitle("극한직업 일자별 평균평점 2") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=9,face="bold"),
axis.title.y = element_text(color="black",size=9,face="bold"))
g3 <- ggplot(data_movie2_3,aes(x=day,y=average,fill=day)) +
geom_bar(stat="identity") +
xlab("일자") + ylab("평균 평점") +
ggtitle("극한직업 일자별 평균평점 3") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=9,face="bold"),
axis.title.y = element_text(color="black",size=9,face="bold"))
g4 <- ggplot(data_movie2_4,aes(x=day,y=average,fill=day)) +
geom_bar(stat="identity") +
xlab("일자") + ylab("평균 평점") +
ggtitle("극한직업 일자별 평균평점 4") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=9,face="bold"),
axis.title.y = element_text(color="black",size=9,face="bold"))
grid.arrange(g1,g2,g3,g4,nrow=2,ncol=2)
data_movie3 <- data_movie %>%
group_by(time) %>%
summarise(average=mean(score,na.rm=T))
data_movie3
ggplot(data_movie3,aes(x=time,y=average, fill=time)) +
geom_bar(stat='identity') +
xlab("시간대") + ylab("평균 평점") +
ggtitle("극한직업 시간대별 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
ggplot(data_movie3,aes(x=time,y=average, fill=time)) +
geom_bar(stat='identity') +
xlab("시간대") + ylab("평균 평점") +
ggtitle("극한직업 시간대별 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="black",size=10,face="bold"),
axis.title.y = element_text(color="black",size=10,face="bold"))
qqnorm(naver_movie$score) ; qqline(naver_movie$score)
bartlett.test(score~month,data=naver_movie)
anova(lm(score~month,data=naver_movie))
kruskal.test(score~month,data=naver_movie)
anova(lm(score~day,data=naver_movie))
kruskal.test(score~day,data=naver_movie)
bartlett.test(score~time,data=naver_movie)
anova(lm(score~time,data=naver_movie))
kruskal.test(score~time,data=naver_movie)
